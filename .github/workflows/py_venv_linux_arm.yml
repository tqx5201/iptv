name: Build aarch64 Green JupyterLab

on:
  workflow_dispatch:

jobs:
  build-aarch64:
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      # 1. 装带共享库的 Python 开发包
      - name: Install system deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libpython3.11-dev patchelf

      # 2. 创建 venv
      - name: Create portable venv
        run: |
          python3.11 -m venv venv --copies --clear
          source venv/bin/activate
          pip install -U pip wheel setuptools \
            openpyxl pandas numpy matplotlib seaborn \
            jupyterlab jupyterlab-language-pack-zh-CN \
            jupyterlab-lsp python-lsp-server[all]

      # 3. 拷贝全部依赖的共享库到 venv/lib
      - name: Collect runtime libraries
        run: |
          mkdir -p venv/lib
          # 当前 python 主程序依赖
          for so in $(ldd /opt/hostedtoolcache/Python/3.11*/x64/bin/python3.11 | awk '/=> \//{print $3}'); do
            [ -f "$so" ] && cp -L "$so" venv/lib/
          done
          # 常见扩展模块依赖（ssl, crypto, ffi 等）
          for so in /usr/lib/aarch64-linux-gnu/libssl.so.3 \
                    /usr/lib/aarch64-linux-gnu/libcrypto.so.3 \
                    /usr/lib/aarch64-linux-gnu/libffi.so.8 \
                    /lib/aarch64-linux-gnu/libexpat.so.1 \
                    /lib/aarch64-linux-gnu/libz.so.1; do
            [ -f "$so" ] && cp -L "$so" venv/lib/
          done

      # 4. 调整 rpath 让 python 优先找 venv/lib
      - name: Patch binaries
        run: |
          patchelf --set-rpath '$ORIGIN/../lib' venv/bin/python3.11
          patchelf --set-rpath '$ORIGIN/../lib' venv/bin/python3

      # 5. 修正脚本里的绝对路径
      - name: Make venv portable
        run: |
          sed -i "s|/opt/hostedtoolcache/Python/3.11[^ ]*bin|./venv/bin|g" venv/pyvenv.cfg
          sed -i '1s|#!/.*venv/bin/python3\.11|#!/usr/bin/env python3|' venv/bin/*
          sed -i "s|/opt/hostedtoolcache/Python/3.11[^ ]*|$(pwd)/venv|g" venv/bin/activate

      # 6. 生成启动脚本（自动设置 LD_LIBRARY_PATH）
      - name: Create launcher
        run: |
          cat > start-jupyterlab.sh <<'EOF'
          #!/bin/bash
          DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
          export LD_LIBRARY_PATH="$DIR/venv/lib:$LD_LIBRARY_PATH"
          exec "$DIR/venv/bin/python3" -m jupyter lab --ip=0.0.0.0 --no-browser "$@"
          EOF
          chmod +x start-jupyterlab.sh

      # 7. 打包
      - name: Tar aarch64 bundle
        run: tar -czf jupyterlab-aarch64.tar.gz venv start-jupyterlab.sh

      - uses: actions/upload-artifact@v4
        with:
          name: jupyterlab-aarch64
          path: jupyterlab-aarch64.tar.gz
